;;; -*- Mode: TDL; Package: DISCO -*-
;;;
;;; $Id: pet.tdl,v 1.2 2008-05-23 01:44:21 sfd Exp $
;;;

;============================================================================
; LMC 2020-02-13
; This config file is to enable 1-characted parsing with zhong while also
; allowing the use of pinyin. Pinyin is, by default 'character-based', i.e.
; each pinyin reading is expected to be followed by a space.
;
; It DOES NOT contain any mal-rule machinery enabled.
; Only lexicon entries are expected to change in this file.
;============================================================================


;; SSH 2014-11-25
;; lexical filtering: reduce the chart after lexical instantiation and the
;; application of lexical rules, right before we turn loose syntactic rules.
:begin :instance :status lexical-filtering-rule.
:include "lfr".
:end :instance.


:begin :type.
:include "head-types".
:include "matrix".
:include "zhong".
:include "zhong-lextypes".
:include "zhong-letypes".
:include "cmn".
:include "zhong-zhs".
:include "mtr".
:include "tmt".
:end :type.


:begin :instance :status token-mapping-rule.
:include "../../tmr/prelude".
:include "../../tmr/pos".
:include "../../tmr/redup".
:include "../../tmr/finis".
:include "../../tmr/ne1".
:include "../../tmr/ne2".
:end :instance.


;;
;; grammar rules and lexical rules (instances of status rule)
;;

:begin :instance :status rule.
:include "rules".
:end :instance.


:begin :instance :status lex-rule.
:include "lrules".
:include "irules".
:end :instance.


;;
;; lexicon entries (instances of status lex-entry or generic-lex-entry)
;;

:begin :instance :status lex-entry.
:include "1c/lex-base-split".
:include "1c/lex-base-pinyin".
:include "1c/lex-symbols".
:include "1c/lex-classifiers-split".
:include "1c/lex-classifiers-pinyin".
:include "1c/lex-numbers-split".
:include "1c/lex-numbers-pinyin".
:include "1c/lexicon-split".
:include "1c/lexicon-pinyin".
:include "1c/lexicon-core-split".
:include "1c/lexicon-core-pinyin".
:end :instance.




:begin :instance :status generic-lex-entry.
:include "gle".
:end :instance.

;;
;; parse-tree labels (instances)
;;

:begin :instance.
:include "labels".
:end :instance.

;;
;; start symbols of the grammar (instances)
;;

:begin :instance.
:include "roots".
:end :instance.
